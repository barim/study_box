{"version":3,"sources":["Libs/dom-helpers.coffee"],"names":[],"mappings":"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","file":"Libs/dom-helpers.js","sourceRoot":"/source/","sourcesContent":["\r\n\r\n### 생성 (Creating) ###\r\ncreateEl = (elName) ->\r\n  validate isString(elName), '문자열을 넣어주셔야 합니다.'\r\n  return document.createElement elName\r\n\r\ncreateText = (content) ->\r\n  # text content\r\n  validate isString(content), '문자열을 넣어주셔야 합니다.'\r\n  return document.createTextNode(content)\r\n\r\n### 삽입(Inserting) 또는 이동(Moving) ###\r\n# 삽입\r\nappend = (parent, child) ->\r\n  validate isElement(parent) && isElement(child), '전달인자는 모두 DOM 요소노드여야 합니다.'\r\n  parent.appendChild( child )\r\n  #.appendChild()\r\n  #- 부모페이지에 자식을 붙이는데 끝에 마지막 자식 요소 노드로 추가 하겠다.\r\n  return\r\n\r\n\r\n# \t\t목표노드, 삽입할노드[새로운노드]\r\nbefore = (target, insert)->\r\n\tparentEle(target).insertBefore( insert, target)\r\n\treturn insert\r\n# 상대적으로 쓰면 목표노드.부모노드\r\n# 삽입할 노드를 던지고 타겟노드를 던지면 내부에서는 타겟노드의 부모에다가 insertBefore 하기 때문에 정상적으로 타겟노드앞에 삽입노드가 추가된다는 개념.\r\n# 결과적으로 타겟은 parent node 가 되어야 한다.\r\n\r\n# 앞에 부모요소없이 insertBefore사용 가능.\r\ninsertBefore = (insert, target)->\r\n\treturn before(target, insert)\r\n\t\r\n\r\n\r\n### 선택(Selecting) | 탐색(Traversing) ###\r\n\r\n# 대상을 손쉽게 선택할 수 있는 선택자 헬퍼 함수\r\n# $함수 : CSS 선택자를 활용하여 문서 객체를 선택하는데 도움을 주는 함수\r\n# @param  {[string]} selector [CSS 선택자 표현식]\r\n# @return {[Node|NodeList]}   [문서객체, 객체집합을 반환]\r\n# context 안에서 selector 가져온다.\r\n$ = (selector, context) ->\r\n  context = context || document\r\n  validate isString(selector), '첫번째 전달인자는 문자열이어야 합니다.'\r\n  validate context && (isElement(context) || context == document), '두번째 전달인자는 DOM 객체(요소노드)이어야 합니다.'\r\n\r\n  nodeList = context.querySelectorAll(selector)\r\n  nodeList_length = nodeList.length\r\n  if nodeList_length == 1 then nodeList[0] else nodeList\r\n\r\n\r\n# 첫번째 전달인자인 부모요소 노드에서 모든 자손(css선택자)요소노드를 찾는 함수\r\nfind = (parentEl, childSelector) ->\r\n  children = parentEl.querySelectorAll(childSelector)\r\n  children_len = children.length\r\n  # 조건문이 3개이상이면 switch case 문을 사용 하는게 성능상 좋다.\r\n  switch children_len\r\n    when 0 then null\r\n    when 1 then children[0]\r\n    else children\r\n  # if children_len == 0\r\n  #   null\r\n  # else if children_len == 1\r\n  #   children[0]\r\n  # else\r\n  #   children\r\n\r\n\r\n# findAll = (list, childSelector)->\r\n# \tif isElement(list) then list\r\n# \telse\r\n# \t\tlistSet = []\r\n# \t\ti = list.length\r\n# \t\twhile i > -1\r\n# \t\t\tlistSet.add( find(list[i], childSelector) )\r\n# \t\t\ti++\r\n# \t\tlistSet\r\n\r\n\r\n# 직접적인 자식만 선택\r\nchildren = (parentEl, childrenSelector) ->\r\n\tchildEl = find(parentEl, childrenSelector)\r\n\tchildEl_len = if childEl then childEl.length else null\r\n\tels = []\r\n\r\n\tif !childEl_len then return childEl\r\n\r\n\twhile childEl_len--\r\n\t\tel = childEl[childEl_len]\r\n\t\tif parentEl == el.parentNode\r\n\t\t\tels.push(el)\r\n\r\n\t# els.length === 0 ? null : els.length === 1 ? els[0] : els;\r\n\t# if els.length == 0 then null else if els.length == 1 then els[0] else els\r\n\tswitch els.length\r\n\t\twhen 0 then null\r\n\t\twhen 1 then els[0]\r\n\t\telse els\r\n\r\n # first() - 전달된 요소노드의 첫번째 자손 요소 반환\r\n # last()  - 전달된 요소노드의 마지막 자손 요소 반환\r\nfirst = (parent, selector) ->\r\n  return $(selector, parent)[0]\r\n\r\nlast = (parent, selector) ->\r\n  childs = $(selector, parent)\r\n  childs_len = childs.length\r\n  return childs[childs_len - 1]\r\n\r\n # prev() - 이전 형제 요소노드 반환\r\n # next() - 다음 형제 요소노드 반환\r\nprev = (el)->\r\n\tvalidate(isElement(el), 'DOM요소노드를 전달해야 합니다.')\r\n\t# ie9+ 신기능 지원하면 사용.\r\n\tif el.previousElementSibling then return el.previousElementSibling\r\n\r\n\t# ie 구버전\r\n\tloop\r\n\t\tel = el.previousSibling\r\n\t\tunless el && el.nodeType != 1\r\n\t\t\tbreak\r\n\treturn el\r\n\r\nnext = (el) ->\r\n  validate isElement(el), 'DOM 요소노드를 전달해야 합니다.'\r\n  if el.nextElementSibling\r\n    return el.nextElementSibling\r\n  loop\r\n    el = el.nextSibling\r\n    unless el && el.nodeType != 1\r\n      break\r\n  return el\r\n\r\n\r\n# 전달된 요소노드 인자의 부모요소노드를 반환.\r\n# upper 몇번째 부모인지 숫자.\r\nparentEle = (el, upper) ->\r\n  upper = upper || 1\r\n  validate isElement(el), '첫번째 전달인자는 DOM 요소노드를 전달해야 합니다.'\r\n  validate isNumber(upper), '두번째 전달인자는 숫자를 전달해야 합니다.'\r\n  loop\r\n    if el == null\r\n      return null\r\n    el = el.parentNode\r\n    unless --upper\r\n      break\r\n  return if el.nodeType == 1 then el else null\r\n\r\n\t###\r\n\tdo{\r\n\t\t\tif el == null\r\n\t\t\t\treturn null\r\n\t\t\tel = el.parentNode\r\n\t\t}while(--upper)\r\n\t###\r\n\r\n\r\n### 조 작(manipulation) ###\r\n\r\n# hasClass(el, 'on') el 요소의 class에 on 이 있나?\r\nhasClass = (el, className)->\r\n\tvalidate( isElement(el), '첫번째 전달인자는 DOM 요소노드여야 만 합니다.' )\r\n\tvalidate( isString(className), '두번째 전달인자 값은 문자여야만 합니다.')\r\n\t# 방법_1\r\n\t# c_name = el.getAttribute('class')\r\n\t# c_name.indexOf(className) >= 0\r\n\r\n\t# 방법_2\r\n\tclassList = attr(el, 'class')\r\n\tclassList = (classList || '').split(' ')\r\n\ti = classList.length - 1\r\n\twhile i > -1\r\n\t\tif classList[i] == className\r\n\t\t\treturn true\r\n\t\ti--\r\n\treturn false\r\n\r\naddClass = (el, className) ->\r\n  validate isElement(el), '첫번째 전달인자는 DOM요소노드 여야만 합니다.'\r\n  validate isString(className), '두번쨰 전달인자 값은 문자여야 합니다.'\r\n  if !hasClass(el, className)\r\n    oldClasses = attr(el, 'class') || ''\r\n    el.setAttribute 'class', (oldClasses + ' ' + className).trim()\r\n  return\r\n\t# .trim() 양쪽 빈 공간을 잘라냄. ECMA5 크로스브라우징 안됨.\r\n\r\n\r\nremoveClass = (el, className) ->\r\n  validate isElement(el), '첫번째 전달인자는 DOM 요소노드여야만 합니다.'\r\n  validate isString(className), '두번째 전달인자 값은 문자여야만 합니다.'\r\n  if hasClass(el, className)\r\n  \t# attr로 가져와서 className을 삭제(빈문자열로 변형) 하고 트림한다.\r\n    changeValue = attr(el, 'class').replace(className, '').trim()\r\n    attr el, 'class', changeValue\r\n  return\r\n\r\n\r\ntoggleClass = (el, className) ->\r\n  if hasClass(el, className) then removeClass(el, className) else addClass(el, className)\r\n  return\r\n\r\n\r\n# 해당 요소의 형재들로부터 className을 제거하고 자기자신에게 붙이는 것.\r\n# radioClass = (el, className)->\r\n# \tvalidate(isElement(el), '첫번째 전달인자는 DOM요소 노드 여야만 합니다.')\r\n# \tvalidate(isString(className), '두번쨰 전달인자 값은 문자여야 합니다.')\r\n# \tparent = el.parentNode\r\n# \ttarget = children(parent, '.' + className)\r\n# \tif target\r\n# \t\tremoveClass(target, className)\r\n# \taddClass(el, className)\r\n# \treturn\r\n\r\n\r\nradioClass = (el, className) ->\r\n# validate(isElement(el), '첫번째 전달인자는 DOM요소 노드 여야만 합니다.')\r\n# validate(isString(className), '두번쨰 전달인자 값은 문자여야 합니다.')\r\n  parent = el.parentNode\r\n  target = children(parent, '.' + className)\r\n  if target\r\n    removeClass target, className\r\n  addClass el, className\r\n  return\r\n\r\n\r\n# attr(el, prop) GET\r\n# attr(el, prop, value) SET\r\nattr = (el, prop, value) ->\r\n  validate isElement(el), '첫번째 인자는 요소노드여야 함.'\r\n  validate isString(prop), '두번째 인자는 문자여야 함.'\r\n  if !value && value != ''\r\n    return el.getAttribute(prop)\r\n  else\r\n    el.setAttribute prop, value\r\n  return\r\n\r\n\r\n\r\n# [문서객체, 문서객체 속성]\r\ngetStyle = (el, prop) ->\r\n  if window.getComputedStyle\r\n    window.getComputedStyle(el)[prop]\r\n  else\r\n    el.currentStyle[prop]\r\n\r\n\r\n###\r\n유틸리티 (utility)\r\n###\r\n\r\n# 신기능 검수\r\ncheckCSS3Feature = (feature) ->\r\n  html = $('html')\r\n  body = $('body')\r\n  html_old_class = attr(html, 'class')\r\n  if feature of body.style\r\n    addClass html, feature\r\n  else\r\n    addClass html, 'no-' + feature\r\n  return\r\n\r\n# 브라우저 식별자로 대상을 구분하는 헬퍼함수.\r\n# 넘기는 문자열을 비교해서 있으면 html 요소에 클래스 붙이는.\r\ncheckUserAgent = (device_name, class_name)->\r\n\tuserAgent = navigator.userAgent.toLowerCase()\r\n\thtml = $('html')\r\n\r\n\tif userAgent.indexOf(device_name) > -1\r\n\t\t# html_old_class = html.getAttribute('class')\r\n\t\t# html.setAttribute('class', html_old_class + ' ' + device_name)\r\n\t\taddClass(html, class_name || device_name)\r\n\r\n\r\n# 유효성 검사 헬퍼 함수\r\nisNumber = (num) ->\r\n  typeof num == 'number'\r\n\r\nisString = (str) ->\r\n  typeof str == 'string'\r\n\r\nisBoolean = (boo) ->\r\n  typeof boo == 'boolean'\r\n\r\nisFunction = (fnc) ->\r\n  typeof fnc == 'function'\r\n\r\nisArray = (arr) ->\r\n  !isObject(arr)\r\n\r\nisObject = (obj) ->\r\n  typeof obj == 'object' && !obj.push\r\n\r\nisType = (data, type) ->\r\n  validate isString(type), '두번째 인자 값은 문자열을 사용해야 합니다.'\r\n  switch data.constructor\r\n    when Number\r\n      return type == 'number' || type == 'num'\r\n    when String\r\n      return type == 'string' || type == 'str'\r\n    when Boolean\r\n      return type == 'boolean' || type == 'boo'\r\n    when Function\r\n      return type == 'function' || type == 'fnc'\r\n    when Array\r\n      return type == 'array' || type == 'arr'\r\n    when Object\r\n      return type == 'object' || type == 'obj'\r\n  return\r\n\r\n\r\n# 요소 노드 인지 확인하는 함수\r\nisElement = (el) ->\r\n  if el then el.nodeType == 1 else false\r\n# 노드 리스트 인지 파악하는 함수\r\nisNodeList = (list) ->\r\n  !!(list && list.length > 0 && list.item)\r\n\r\n\r\n\r\n# 전달인자 [조건, 오류메세지]\r\nvalidate = (condition, error_msg) ->\r\n  if condition == undefined || condition == null\r\n    condition = false\r\n  else if !condition && condition != 0 && condition != ''\r\n    throw new TypeError(error_msg)\r\n  return\r\n\r\n# 객체obj1 에 객체obj2 의 멤버를 복제\r\n# 동일한 멤버가 있을 경우 덮어씀.\r\noverride = (obj1, obj2) ->\r\n  for key of obj2\r\n    obj1[key] = obj2[key]\r\n  return obj1"]}